<docs>
  <members name="SqlBulkCopyColumnOrderHintCollection">
    <SqlBulkCopyColumnOrderHintCollection>
      <summary>
        Collection of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> objects that inherits from <see cref="T:System.Collections.CollectionBase" />.
      </summary>
      <remarks>
        <format type="text/markdown">
          <![CDATA[  
Column order hints define the sort order of the column in the destination table.

SqlBulkCopy's performance is improved if the data being imported is sorted according to the clustered index on the table, if any. If the data is sorted in an order that differs from the order of a clustered index key or if there is no clustered index on the table, the order hint is ignored.

Order hints can be specified for any number of columns in the destination table. By default, the bulk insert operation assumes the data is unordered if no hints are provided.

The column names supplied must be valid column names in the destination table. The order in which hints can be specified is arbitrary. A single column name cannot be specified more than once. 

If the <xref:Microsoft.Data.SqlClient.SqlBulkCopy.ColumnMappings> collection is not empty, order hints can only be provided for valid destination columns which have been mapped.

If a <xref:Microsoft.Data.SqlClient.SortOrder> of Unspecified is given, an <xref:System.ArgumentException> will be thrown.

]]></format>
      </remarks>
      <example>
        <format type="text/markdown">
          <![CDATA[    
The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint>s are added to the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection> of the <xref:Microsoft.Data.SqlClient.SqlBulkCopy> object to specify order hints for the bulk copy operation.  

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup). 

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollection#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollection.cs#1)]

]]></format>
      </example>
    </SqlBulkCopyColumnOrderHintCollection>
    <Add name="columnOrderHintParameter">
      <param name="columnOrderHint">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object that describes the order hint to be added to the collection.
      </param>
      <summary>
        Adds the specified order hint to the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />.
      </summary>
      <returns>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </returns>
      <example>
        <format type="text/markdown">
          <![CDATA[  
The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. A <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint> object is used to define the sort order for the **ProductNumber** destination column.

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup). 

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollectionAdd#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollectionAdd.cs)]

]]>
</format>
      </example>
      <exception cref="T:System.ArgumentException">
        The value is null.
      </exception>
    </Add>
    <Add name="columnStringAndSortOrderSortOrder">
      <param name="column">
        The name of the destination column within the destination table.
      </param>
      <param name="sortOrder">
        The sort order of the corresponding destination column.
      </param>
      <summary>
        Creates a new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> and adds it to the collection.
      </summary>
      <returns>
        A column column order hint.
      </returns>
      <example>
        <format type="text/markdown">
          <![CDATA[  
The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. A <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint> object is added to the <xref:Microsoft.Data.SqlClient.SqlBulkCopy.ColumnOrderHints> by providing the destination column name and its sort order.

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup). 

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a 
Transact-SQL `INSERT … SELECT` statement to copy the data.  

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollectionAdd2#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollectionAdd2.cs#1)]

]]></format>
      </example>
    </Add>
    <Clear>
      <summary>
        Clears the contents of the collection.
      </summary>
      <remarks>
        <format type="text/markdown">
          <![CDATA[  
The <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Clear> method is most commonly used when you use a single <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column order hints for one bulk copy operation, you must clear the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection> after the <xref:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer> method and before processing the next bulk copy.  

Performing several bulk copies using the same <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:Microsoft.Data.SqlClient.SqlBulkCopy> for each operation.  

]]></format>
      </remarks>
      <example>
        <format type="text/markdown">
          <![CDATA[  
The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. The example defines a column order hint for each bulk copy operation. The <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Clear> method must be used after the first bulk copy is performed and before the next bulk copy's order hint is defined.  

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup).

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollectionClear#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollectionClear.cs#1)]

]]></format>
      </example>
    </Clear>
    <Contains>
      <param name="value">
        A valid <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </param>
      <summary>
        Gets a value indicating whether a specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object exists in the collection.
      </summary>
      <returns>
        <see langword="true" /> if the specified column order hint exists in the collection; otherwise <see langword="false" />.
      </returns>
    </Contains>
    <CopyTo>
      <param name="array">
        The one-dimensional <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> array that is the destination of the elements copied from <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />. The array must have zero-based indexing.
      </param>
      <param name="index">
        The zero-based index in <paramref name="array" /> at which copying begins.
      </param>
      <summary>
        Copies the elements of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> to an array of <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> items, starting at a particular index.
      </summary>
    </CopyTo>
    <IndexOf>
      <param name="value">
        The <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object for which to search.
      </param>
      <summary>
        Gets the index of the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </summary>
      <returns>
        The zero-based index of the column order hint, or -1 if the column order hint is not found in the collection.
      </returns>
    </IndexOf>
    <Insert>
      <param name="index">
        Integer value of the location within the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> at which to insert the new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" />.
      </param>
      <param name="columnOrderHint">
        <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be inserted in the collection.
      </param>
      <summary>
        Insert a new <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> at the index specified.
      </summary>
      <remarks>
        The order in which column order hints can be added is arbitrary.
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index is less than zero or greater than the size of the collection.
      </exception>
      <exception cref="T:System.ArgumentNullException">
        A null column order hint cannot be added to the collection.
      </exception>
    </Insert>
    <Item>
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> to find.
      </param>
      <summary>
        Gets the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object at the specified index.
      </summary>
      <value>
        A <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object.
      </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index must be non-negative and less than the size of the collection.
      </exception>
    </Item>
    <Remove>
      <param name="columnOrderHint"> <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be removed from the collection.</param>
      <summary>
        Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> element from the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" />.
      </summary>
      <remarks>
        <format type="text/markdown">
          <![CDATA[  
The Remove method is most commonly used when you use a single <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column order hints for one bulk copy operation, you must clear the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection> after the <xref:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method and before processing the next bulk copy.   

You can clear the entire collection by using the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Clear> method, or remove hints individually using the Remove method or the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.RemoveAt%2A> method.  

Performing several bulk copies using the same <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:Microsoft.Data.SqlClient.SqlBulkCopy> for each operation.   

]]></format>
      </remarks>
      <example>
        <format type="text/markdown">
          <![CDATA[  
The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. The example defines a column order hint for the **OrderDate** column in the first bulk copy operation. The hint is removed before the second bulk copy operation.

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup).

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollectionRemove#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollectionRemove.cs#1)]

]]></format>
      </example>
      <exception cref="T:System.ArgumentNullException">
        The value is null.
      </exception>
    </Remove>
    <RemoveAt>
      <param name="index">
        The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHint" /> object to be removed from the collection.
      </param>
      <summary>
        Removes the column order hint at the specified index from the collection.
      </summary>
      <remarks>
        <format type="text/markdown">
          <![CDATA[  
The <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.RemoveAt> method is most commonly used when you use a single <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column order hints for one bulk copy operation, you must clear the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection> after the <xref:Microsoft.Data.SqlClient.SqlBulkCopy.WriteToServer> method and before processing the next bulk copy. 
You can clear the entire collection by using the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Clear> method, or remove hints individually using the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.Remove> method or the <xref:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection.RemoveAt> method.  

Performing several bulk copies using the same <xref:Microsoft.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:Microsoft.Data.SqlClient.SqlBulkCopy> for each operation.  

]]></format>
      </remarks>
      <example>
        <format type="text/markdown">
          <![CDATA[  
The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. The example defines a column order hint for the **OrderDate** column in the first bulk copy operation. The hint is removed before the second bulk copy operation.

> [!IMPORTANT]
> This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](https://learn.microsoft.com/sql/connect/ado-net/sql/bulk-copy-example-setup).

This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  

[!code-csharp[SqlBulkCopy.ColumnOrderHintCollectionRemoveAt#1](~/../sqlclient/doc/samples/SqlBulkCopy_ColumnOrderHintCollectionRemoveAt.cs#1)]

]]></format>
      </example>
      <exception cref="T:System.ArgumentOutOfRangeException">
        The index must be non-negative and less than the size of the collection.
      </exception>
    </RemoveAt>
    <IsSynchronized>
      <summary>
        Gets a value indicating whether access to the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> is synchronized (thread safe).
      </summary>
      <value>
        <see langword='true' /> if access to the <see cref="T:Microsoft.Data.SqlClient.SqlBulkCopyColumnOrderHintCollection" /> is synchronized (thread safe); otherwise, <see langword='false' />.
      </value>
    </IsSynchronized>
  </members>
</docs>
